components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    FormType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        createAt:
          type: string
          format: date-time
      example:
        id: 5f47ac10b54764421b7163e1
        name: Form Type Example
        description: This is a sample description for a form type
        createAt: 2025-01-01T10:00:00.000Z'

    Form:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the form
        name:
          type: string
          description: The name of the form
        description:
          type: string
          description: A brief description of the form
        url:
          type: string
          format: uri
          description: URL for the form
        formTypeId:
          type: string
          description: Reference ID to the FormType
        createAt:
          type: string
          format: date-time
          description: Timestamp when the form was created
      example:
        id: 601c3f3b954f1a39b003f10d
        name: 'Contact Us Form'
        description: 'Form to capture contact information'
        url: 'https://example.com/forms/contact-us'
        formTypeId: '5f47ac10b54764421b7163e1'
        createAt: 2025-01-01T12:00:00.000Z

    Regulation:
      type: object
      properties:
        name:
          type: string
          description: Name of the regulation
        issuedDate:
          type: string
          format: date-time
          description: Date when the regulation was issued
        updatedDate:
          type: string
          format: date-time
          description: Date when the regulation was last updated
        sourceUrl:
          type: string
          format: uri
          description: URL of the regulation source
        updatedSource:
          type: string
          description: Source of the updated regulation
      example:
        name: 'Regulation Example'
        issuedDate: '2023-10-01T10:00:00.000Z'
        updatedDate: '2023-10-10T10:00:00.000Z'
        sourceUrl: 'https://example.com/regulations/regulation-example'
        updatedSource: 'Updated Regulation Source'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Invalid request parameters

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
